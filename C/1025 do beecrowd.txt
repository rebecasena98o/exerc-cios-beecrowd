1025 do beecrowd

#include <stdio.h>
#include <stdlib.h>

int cmp(const void *a, const void *b) {
    return (*(int*)a - *(int*)b);
}

int main() {
    int N, Q, caso = 1;

    while (1) {
        scanf("%d %d", &N, &Q);
        if (N == 0 && Q == 0) break;

        int marbles[N];
        for (int i = 0; i < N; i++) scanf("%d", &marbles[i]);

        qsort(marbles, N, sizeof(int), cmp);

        printf("CASE# %d:\n", caso++);

        for (int i = 0; i < Q; i++) {
            int query;
            scanf("%d", &query);

            int pos = -1;
            for (int j = 0; j < N; j++) {
                if (marbles[j] == query) {
                    pos = j + 1; // posição 1-based
                    break;
                }
            }

            if (pos != -1)
                printf("%d found at %d\n", query, pos);
            else
                printf("%d not found\n", query);
        }
    }

    return 0;
}
